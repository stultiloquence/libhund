# done

- quality 1: size of separators
	- compare to that of mt-kahypar with 2^d blocks
- when attempting multiple bisections in parallel, what is the difference between the worst, the best, and average bisections?
- performance:
	- compare with mt-kahypar with 2^d
	- Catch2 BENCHMARK
- Clean up repository
- Expand CLI
	- save permutation vectors as txt files

# todos from more likely to less likely

- Donnerstag
	- run on cluster for test results
	- do the presentation
- Freitag, Samstag
	- Add additional correctness tests
		- empty hyperedges
	- Expand documentation and README
	- Clean up build process
	- Refactoring some overly complicated methods
		- especially the part that niklas is puking at where we combine permutations in run_multi_node ._.
- Sonntag, Montag, Mittwoch
	- the report
- Donnerstag, Freitag
	- getting it working on >1 node

- Systematically run and evaluate and tweak using the tests
	- for different parameters / parameter variation to figure out a reasonable one
	- on cluster
- quality 2: relative increase in nnz (needs LU) -> compare with other libs
- performance test enhancement: profiling of different parts of the code
- Use external library for local reordering (currently returning identity permutations)
- Support additional matrix formats