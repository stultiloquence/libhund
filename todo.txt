# done

- quality 1: size of separators
	- compare to that of mt-kahypar with 2^d blocks
- when attempting multiple bisections in parallel, what is the difference between the worst, the best, and average bisections?
- performance:
	- compare with mt-kahypar with 2^d
	- Catch2 BENCHMARK
- Clean up repository
- Expand CLI
	- save permutation vectors as txt files

# todo

- Systematically run and evaluate and tweak using the tests
	- for different parameters / parameter variation to figure out a reasonable one
- Add additional correctness tests
	- empty hyperedges o__o ^_^
- Expand documentation and README
- Clean up build process
- quality 2: relative increase in nnz (needs LU) -> compare with other libs

# optional

- performance test enhancement: profiling of different parts of the code
- limit test output to 1 node by patching catch2.hpp
- Use external library for local reordering (currently returning identity permutations)
- Refactoring some overly complicated methods
	- especially the part that niklas is puking at where we combine permutations in run_multi_node ._.
- Support additional matrix formats
